{
  "id": "css-dsl",
  "name": "CSS DSL",
  "copyright": "Apache 2.0",
  "short_description": "Generate CSS using Kotlin code",
  "vendor": {
    "name": "Ktor",
    "url": "https://ktor.io/"
  },
  "group": "Templating",
  "version": "1.5.2",
  "ktor_version": "1.4.0",
  "required_feature_ids": [
    "html-dsl"
  ],
  "github": "https://github.com/JetBrains/kotlin-wrappers/tree/master/kotlin-css",
  "documentation": {
    "description": "`CSS DSL` extends `HTML DSL` and allows you to author stylesheets in Kotlin by using the `kotlin-css` wrapper.\n\n",
    "usage": "To send a CSS response, you need to extend `ApplicationCall` by adding the `respondCss` method to serialize a stylesheet into a string and send it to the client with the `CSS` content type:\n\n```kotlin\nsuspend inline fun ApplicationCall.respondCss(builder: CSSBuilder.() -> Unit) {\n   this.respondText(CSSBuilder().apply(builder).toString(), ContentType.Text.CSS)\n}\n```\n\nThen, you can provide CSS inside the required [route](Routing_in_Ktor.md):\n\n```kotlin\nget(\"/styles.css\") {\n    call.respondCss {\n        body {\n            backgroundColor = Color.darkBlue\n            margin(0.px)\n        }\n        rule(\"h1.page-title\") {\n            color = Color.white\n        }\n    }\n}\n```\n\nFinally, you can use the specified CSS for an HTML document created with [HTML DSL](html_dsl.md):\n```kotlin\nget(\"/html-dsl\") {\n    call.respondHtml {\n        head {\n            link(rel = \"stylesheet\", href = \"/styles.css\", type = \"text/css\")\n        }\n        body {\n            h1(classes = \"page-title\") {\n                +\"Hello from Ktor!\"\n            }\n        }\n    }\n}\n```",
    "options": "No options"
  },
  "install_recipe": {
    "install_block": "",
    "imports": [
      "kotlinx.css.*",
      "io.ktor.http.*"
    ],
    "test_imports": [],
    "templates": [
      {
        "position": "in_routing",
        "text": "get(\"/styles.css\") {\n    call.respondCss {\n        body {\n            backgroundColor = Color.darkBlue\n            margin(0.px)\n        }\n        rule(\"h1.page-title\") {\n            color = Color.white\n        }\n    }\n}\n\nget(\"/html-css-dsl\") {\n    call.respondHtml {\n        head {\n            link(rel = \"stylesheet\", href = \"/styles.css\", type = \"text/css\")\n        }\n        body {\n            h1(classes = \"page-title\") {\n                +\"Hello from Ktor!\"\n            }\n        }\n    }\n}"
      },
      {
        "position": "outside_app",
        "text": "suspend inline fun ApplicationCall.respondCss(builder: CSSBuilder.() -> Unit) {\n   this.respondText(CSSBuilder().apply(builder).toString(), ContentType.Text.CSS)\n}\n"
      }
    ]
  },
  "dependencies": [
    {
      "group": "org.jetbrains",
      "artifact": "kotlin-css-jvm",
      "version": "1.0.0-pre.129-kotlin-1.4.20"
    }
  ],
  "gradle_install": {
    "repositories": [
      {
        "type": "url_based",
        "url": "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/kotlin-js-wrappers"
      }
    ]
  },
  "maven_install": {
    "repositories": [
      {
        "id": "kotlin_js",
        "url": "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/kotlin-js-wrappers"
      }
    ]
  }
}