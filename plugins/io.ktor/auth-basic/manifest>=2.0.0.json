{
  "id": "auth-basic",
  "name": "Authentication Basic",
  "version": "2.0.0",
  "ktor_version": "2.0.0",
  "short_description": "Handle Basic authentication",
  "github": "https://github.com/ktorio/ktor/blob/4a50c76c3264b0121b91a203d38473bb4aafbace/ktor-features/ktor-auth/jvm/src/io/ktor/auth/BasicAuth.kt",
  "copyright": "Apache 2.0",
  "vendor": {
    "name": "Ktor",
    "url": "https://ktor.io/"
  },
  "group": "Security",
  "required_feature_ids": [
    "auth"
  ],
  "install_recipe": {
    "imports": [
      "io.ktor.server.auth.*",
      "io.ktor.server.response.*"
    ],
    "install_block": "server/template/auth-basic/installBlock.kt",
    "templates": [
      {
        "position": "in_routing",
        "text": "server/template/auth-basic/text.kt"
      }
    ]
  },
  "documentation": {
    "description": "Ktor supports two authentication schemes with the user and raw password as credentials:\n* The [Basic](https://ktor.io/docs/basic.html) scheme is a part of HTTP framework used for access control and authentication. In this scheme, user credentials are transmitted as username/password pairs encoded using Base64.\n* [Form-based](https://ktor.io/docs/form.html) authentication uses a web form to collect credential information and authenticate a user.",
    "usage": "A configured Basic provider might look as follows:\n```kotlin\ninstall(Authentication) {\n    basic(\"auth-basic\") {\n        realm = \"Access to the '/' path\"\n        validate { credentials ->\n            if (credentials.name == \"jetbrains\" && credentials.password == \"foobar\") {\n                UserIdPrincipal(credentials.name)\n            } else {\n                null\n            }\n        }\n    }\n}\n```\n\nForm-based authentication also requires parameter names used to fetch a username and password:\n```kotlin\ninstall(Authentication) {\n    form(\"auth-form\") {\n        userParamName = \"username\"\n        passwordParamName = \"password\"\n        validate { credentials ->\n            if (credentials.name == \"jetbrains\" && credentials.password == \"foobar\") {\n                UserIdPrincipal(credentials.name)\n            } else {\n                null\n            }\n        }\n    }\n}\n```",
    "options": ""
  }
}